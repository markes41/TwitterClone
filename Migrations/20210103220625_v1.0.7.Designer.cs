// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TwitterClone.Models;

namespace TwitterClone.Migrations
{
    [DbContext(typeof(TwitterContext))]
    [Migration("20210103220625_v1.0.7")]
    partial class v107
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("TwitterClone.Models.Like", b =>
                {
                    b.Property<long>("LikeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToLikeMail")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TweetID")
                        .HasColumnType("INTEGER");

                    b.HasKey("LikeID");

                    b.HasIndex("ToLikeMail");

                    b.HasIndex("TweetID");

                    b.ToTable("Like");
                });

            modelBuilder.Entity("TwitterClone.Models.Retweet", b =>
                {
                    b.Property<long>("RetweetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToRetweetMail")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TweetID")
                        .HasColumnType("INTEGER");

                    b.HasKey("RetweetID");

                    b.HasIndex("ToRetweetMail");

                    b.HasIndex("TweetID");

                    b.ToTable("Retweet");
                });

            modelBuilder.Entity("TwitterClone.Models.Tweet", b =>
                {
                    b.Property<long>("TweetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Comments")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerMail")
                        .HasColumnType("TEXT");

                    b.HasKey("TweetID");

                    b.HasIndex("OwnerMail");

                    b.ToTable("Tweets");
                });

            modelBuilder.Entity("TwitterClone.Models.User", b =>
                {
                    b.Property<string>("Mail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Day")
                        .HasColumnType("TEXT");

                    b.Property<string>("Month")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Year")
                        .HasColumnType("TEXT");

                    b.HasKey("Mail");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TwitterClone.Models.Like", b =>
                {
                    b.HasOne("TwitterClone.Models.User", "ToLike")
                        .WithMany()
                        .HasForeignKey("ToLikeMail");

                    b.HasOne("TwitterClone.Models.Tweet", null)
                        .WithMany("Likes")
                        .HasForeignKey("TweetID");

                    b.Navigation("ToLike");
                });

            modelBuilder.Entity("TwitterClone.Models.Retweet", b =>
                {
                    b.HasOne("TwitterClone.Models.User", "ToRetweet")
                        .WithMany()
                        .HasForeignKey("ToRetweetMail");

                    b.HasOne("TwitterClone.Models.Tweet", null)
                        .WithMany("Retweets")
                        .HasForeignKey("TweetID");

                    b.Navigation("ToRetweet");
                });

            modelBuilder.Entity("TwitterClone.Models.Tweet", b =>
                {
                    b.HasOne("TwitterClone.Models.User", "Owner")
                        .WithMany("Tweets")
                        .HasForeignKey("OwnerMail");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("TwitterClone.Models.Tweet", b =>
                {
                    b.Navigation("Likes");

                    b.Navigation("Retweets");
                });

            modelBuilder.Entity("TwitterClone.Models.User", b =>
                {
                    b.Navigation("Tweets");
                });
#pragma warning restore 612, 618
        }
    }
}
